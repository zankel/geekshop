// <auto-generated />
using System;
using GGstore.ProductAPI.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeekShopping.ProductAPI.Migrations
{
    [DbContext(typeof(MySQLContext))]
    partial class MySQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GGstore.ProductAPI.Model.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("game");
                });

            modelBuilder.Entity("GGstore.ProductAPI.Model.GameGenero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("GameId")
                        .HasColumnType("int")
                        .HasColumnName("game_id");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int")
                        .HasColumnName("genero_id");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("GeneroId");

                    b.ToTable("gamegenero");
                });

            modelBuilder.Entity("GGstore.ProductAPI.Model.GamePlataforma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("GameId")
                        .HasColumnType("int")
                        .HasColumnName("game_id");

                    b.Property<int>("PlataformaId")
                        .HasColumnType("int")
                        .HasColumnName("plataforma_id");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlataformaId");

                    b.ToTable("gameplataforma");
                });

            modelBuilder.Entity("GGstore.ProductAPI.Model.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("genero");
                });

            modelBuilder.Entity("GGstore.ProductAPI.Model.Plataforma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("plataforma");
                });

            modelBuilder.Entity("GGstore.ProductAPI.Model.GameGenero", b =>
                {
                    b.HasOne("GGstore.ProductAPI.Model.Game", "Game")
                        .WithMany("GameGeneros")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GGstore.ProductAPI.Model.Genero", "Genero")
                        .WithMany("GameGeneros")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("GGstore.ProductAPI.Model.GamePlataforma", b =>
                {
                    b.HasOne("GGstore.ProductAPI.Model.Game", "Game")
                        .WithMany("GamePlataformas")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GGstore.ProductAPI.Model.Plataforma", "Plataforma")
                        .WithMany("GamePlataformas")
                        .HasForeignKey("PlataformaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Plataforma");
                });

            modelBuilder.Entity("GGstore.ProductAPI.Model.Genero", b =>
                {
                    b.HasOne("GGstore.ProductAPI.Model.Game", null)
                        .WithMany("Generos")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("GGstore.ProductAPI.Model.Plataforma", b =>
                {
                    b.HasOne("GGstore.ProductAPI.Model.Game", null)
                        .WithMany("Plataformas")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("GGstore.ProductAPI.Model.Game", b =>
                {
                    b.Navigation("GameGeneros");

                    b.Navigation("GamePlataformas");

                    b.Navigation("Generos");

                    b.Navigation("Plataformas");
                });

            modelBuilder.Entity("GGstore.ProductAPI.Model.Genero", b =>
                {
                    b.Navigation("GameGeneros");
                });

            modelBuilder.Entity("GGstore.ProductAPI.Model.Plataforma", b =>
                {
                    b.Navigation("GamePlataformas");
                });
#pragma warning restore 612, 618
        }
    }
}
